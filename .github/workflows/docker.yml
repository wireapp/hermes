name: Publish Docker Image

on:
  workflow_call:
    inputs:
      registry:
        type: string
        required: true
      image:
        type: string
        required: true
      publish:
        type: boolean
        required: true
      platforms:
        type: string
        required: false
        default: linux/amd64
    secrets:
      username:
        required: false
      password:
        required: false

jobs:
  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

        # use the latest tag as release version in the docker container
      - name: Set Release Version - SHA
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: echo "RELEASE_VERSION=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Set Release Version - TAG
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV

      # extract metadata for labels https://github.com/docker/metadata-action
      - name: Docker meta Runtime
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.image }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=sha

        # setup docker actions https://github.com/docker/build-push-action
        # we have these two in order to support multiplatform builds if needed
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # login to GCR repo
      - name: Login to GCR
        if: ${{ inputs.publish }}
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: ${{ inputs.platforms }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: ${{ inputs.publish }}
          build-args: |
            release_version=${{ env.RELEASE_VERSION }}
